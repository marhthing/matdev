Web Search
Some models and systems on Groq have native support for access to real-time web content, allowing them to answer questions with up-to-date information beyond their knowledge cutoff. API responses automatically include citations with a complete list of all sources referenced from the search results.

The use of this tool with a supported model in GroqCloud is not a HIPAA Covered Cloud Service under Groq's Business Associate Addendum at this time. This tool is also not available currently for use with regional / sovereign endpoints.

Supported Models
Built-in web search is supported for the following models and systems:

Model ID	Model
groq/compound

Compound
groq/compound-mini

Compound Mini

For a comparison between the groq/compound and groq/compound-mini systems and more information regarding extra capabilities, see the Compound Systems page.

Quick Start
To use web search, change the model parameter to one of the supported models.


python

from groq import Groq
import json

client = Groq()

response = client.chat.completions.create(
    model="groq/compound",
    messages=[
        {
            "role": "user",
            "content": "What happened in AI last week? Provide a list of the most important model releases and updates."
        }
    ]
)

# Final output
print(response.choices[0].message.content)

# Reasoning + internal tool calls
print(response.choices[0].message.reasoning)

# Search results from the tool calls
if response.choices[0].message.executed_tools:
    print(json.dumps(response.choices[0].message.executed_tools[0].search_results, indent=2))
And that's it!


When the API is called, it will intelligently decide when to use search to best answer the user's query. These tool calls are performed on the server side, so no additional setup is required on your part to use built-in tools.

Final Output
This is the final response from the model, containing the synthesized answer based on web search results. The model combines information from multiple sources to provide a comprehensive response with automatic citations. Use this as the primary output for user-facing applications.


Reasoning and Internal Tool Calls
This shows the model's internal reasoning process and the search queries it executed to gather information. You can inspect this to understand how the model approached the problem and what search terms it used. This is useful for debugging and understanding the model's decision-making process.


Search Results
These are the raw search results that the model retrieved from the web, including titles, URLs, content snippets, and relevance scores. You can use this data to verify sources, implement custom citation systems, or provide users with direct links to the original content. Each result includes a relevance score from 0 to 1.


Search Settings
Customize web search behavior by using the search_settings parameter. This parameter allows you to exclude specific domains from search results or restrict searches to only include specific domains. These parameters are supported for both groq/compound and groq/compound-mini.

Parameter	Type	Description
exclude_domains	string[]	List of domains to exclude when performing web searches. Supports wildcards (e.g., "*.com")
include_domains	string[]	Restrict web searches to only search within these specified domains. Supports wildcards (e.g., "*.edu")
country	string	Boost search results from a specific country. This will prioritize content from the selected country in the search results.
Domain Filtering with Wildcards
Both include_domains and exclude_domains support wildcard patterns using the * character. This allows for flexible domain filtering:

Use *.com to include/exclude all .com domains
Use *.edu to include/exclude all educational institutions
Use specific domains like example.com to include/exclude exact matches
You can combine both parameters to create precise search scopes. For example:

Include only .com domains while excluding specific sites
Restrict searches to specific country domains
Filter out entire categories of websites
Search Settings Examples
Exclude Domains
Include Domains
Wildcard Use
shell

curl "https://api.groq.com/openai/v1/chat/completions" \
  -X POST \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer ${GROQ_API_KEY}" \
  -d '{
         "messages": [
           {
             "role": "user",
             "content": "Tell me about the history of Bonsai trees in America"
           }
         ],
         "model": "groq/compound-mini",
         "search_settings": {
           "exclude_domains": ["wikipedia.org"]
         }
       }'
Pricing
Please see the Pricing page for more information.


There are two types of web search: basic search and advanced search, and these are billed differently.

Basic Search
A more basic, less comprehensive version of search that provides essential web search capabilities. Basic search is supported on Compound version 2025-07-23. To use basic search, specify the version in your API request. See Compound System Versioning for details on how to set your Compound version.

Advanced Search
The default search experience that provides more comprehensive and intelligent search results. Advanced search is automatically used with Compound versions newer than 2025-07-23 and offers enhanced capabilities for better information retrieval and synthesis.

Provider Information
Web search functionality is powered by Tavily, a search API optimized for AI applications. Tavily provides real-time access to web content with intelligent ranking and citation capabilities specifically designed for language models.

Was this page helpful?

Yes

No

Suggest Edits
On this page
Supported Models
Quick Start
Search Settings
Pricing
